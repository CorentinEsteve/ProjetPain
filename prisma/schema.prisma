generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id              String  @id @unique @default(uuid())
  username        String  @unique @db.VarChar(64)
  firstName       String?
  lastName        String?
  email           String  @unique
  password        String  @default("1234")
  deliveryAddress String?
  orderHistory    Order[]
  loyaltyPoints   Int?    @default(0)
  role            Role    @default(USER)
}

model Product {
  id            String       @id @default(uuid())
  name          String
  description   String
  price         Float
  image         String
  category      String
  Order         Order?       @relation(fields: [orderId], references: [id])
  orderId       String?
  Menu          Menu?        @relation(fields: [menuId], references: [id])
  menuId        String?
  SpecialDiet   SpecialDiet? @relation(fields: [specialDietId], references: [id])
  specialDietId String?
}

model Order {
  id              String         @id @default(uuid())
  user            User           @relation(fields: [userId], references: [id])
  userId          String
  products        Product[]
  orderDate       DateTime       @default(now())
  deliveryDate    DateTime
  status          String         @default("pending")
  Customization   Customization? @relation(fields: [customizationId], references: [id])
  customizationId String?
}

model Customization {
  id          String  @id @default(uuid())
  custom      String
  inscription String
  order       Order[]
}

model Menu {
  id          String    @id @default(uuid())
  category    String
  products    Product[]
  images      String[]
  description String[]
}

model SpecialDiet {
  id              String    @id @default(uuid())
  compatibleItems Product[]
  dietDescription String
}

model CookingClass {
  id          String   @id @default(uuid())
  name        String
  category    String
  description String
  price       Float
  image       String
  date        DateTime
}

enum Role {
  USER
  ADMIN
}
